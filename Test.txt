Unit Tests
You need to test the Calculator model using the testing framework Mocha. Write your tests in /tests/unit/calculator_spec.js. Test the following functions perform the following tasks:

calculator.add() - add 1 to 4 and get 5
calculator.subtract() subtract 4 from 7 and get 3
calculator.multiply() - multiply 3 by 5 and get 15
calculator.divide() - divide 21 by 7 and get 3
calculator.numberClick() - concatenate multiple number button clicks
calculator.operatorClick() - chain multiple operations together
calculator.clearClick() - clear the running total without affecting the calculation
UI Integration Tests
You need to write front-end integration tests to ensure the Calculator model and browser UI are working to meet the user requirements. The framework provided to do this is Protractor JS using Chai for assertions. There is one sample test written in /tests/integration/tests.js and you should continue writing your tests in this file.

You should write tests to ensure the following requirements are met:

Do the number buttons update the display of the running total?
Do the arithmetical operations update the display with the result of the operation?
Can multiple operations be chained together?
Is the output as expected for a range of numbers (for example, positive, negative, decimals and very large numbers)?
What does the code do in exceptional circumstances? Specifically, if you divide by zero, what is the effect? Write a test to describe what you'd prefer to happen, and then correct the code to make that test pass (you will need to modify the Calculator model to meet this requirement)

This activity connects to the following Knowledge/Skills and Outcomes:
Test programmes with a variety of techniques (outcome 4)
Perform unit testing.
Execute integration testing.
Examine the software's compliance with the requirements and conduct user acceptance testing.
Calculator in JavaScript
User specifications: "I want to be able to execute basic mathematical operations in a web browser."

The starter code offers ways to add, subtract, divide, and multiply supplied values to a total using a calculator model (. The Calculator model provides features that allow it to record computations as they are made.
The approach is employed in a web application that enables users to chain several processes together before requesting the sum of all of them.
run index.html file